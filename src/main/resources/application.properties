spring.config.import=commands/commands.properties

keith.version=[version]

# concurrency configurations

### how many threads we dedicate to handling commands
keith.executor.commands.poolSize.min=1
keith.executor.commands.poolSize.max=4

### how many threads we dedicate to handling message events
keith.executor.messages.poolSize.min=1
keith.executor.messages.poolSize.max=2

### how many threads we dedicate to handling reaction events
keith.executor.reactions.poolSize.min=1
keith.executor.reactions.poolSize.max=2

### how many threads are available for scheduling tasks
keith.executor.scheduler.poolSize.core=1

### how many threads are available for serving reminders
keith.executor.reminders.scheduler.poolSize.core=1

# the value of commands a single candidate can have before a command is rejected
keith.rateLimit.maxValue=7

#how often the cache fully evicts (should probably use a real cache eventually)
keith.manager.cache.refresh=30


#command config location

keith.commands.config.location=classpath:commands/commandConfiguration.json

# i18n internationalization
spring.messages.basename=config.i18n.messages
spring.messages.fallback-to-system-locale=false

# SQL statements

keith.commands.remind.statements.getReminders=SELECT GuildID, ChannelID, UserID, Date, Text FROM reminders WHERE date < ?
keith.commands.remind.statements.removeReminder=DELETE FROM reminders WHERE (GuildID \= ? AND ChannelID \= ? AND UserID \= ? AND Date \= ? AND text \= ?)
keith.commands.remind.statements.setReminder=INSERT INTO reminders (GuildID, ChannelID, UserID, Date, Text) VALUES (?, ?, ?, ?, ?)

keith.commands.stats.statements.returnAdmins=SELECT (DiscordID) FROM users WHERE UserLevel > 2
keith.commands.stats.statements.returnServers=SELECT ServerID, FirstSeen FROM servers

keith.manager.candidate.statements.createCandidate=INSERT INTO users (DiscordID) VALUES (?)
keith.manager.candidate.statements.getCandidate=SELECT FirstSeen, UserLevel, CommandCount FROM users WHERE DiscordID \= ?
keith.manager.candidate.statements.incrementCommandCount=UPDATE users SET CommandCount \= CommandCount + 1 WHERE DiscordID \= ?
keith.manager.candidate.statements.setAccessLevel=UPDATE users SET UserLevel \= ? WHERE DiscordID \= ?

keith.manager.server.statements.createServer=INSERT INTO servers (ServerID) VALUES (?)
keith.manager.server.statements.getServer=SELECT FirstSeen, prefix, banned, PinChannel FROM servers where serverID \= ?
keith.manager.server.statements.setBanned=UPDATE servers SET banned \= ? WHERE ServerID \= ?
keith.manager.server.statements.setPinChannel=UPDATE servers SET PinChannel \= ? WHERE ServerID \= ?
keith.manager.server.statements.setPrefix=UPDATE servers SET prefix \= ? WHERE ServerID \= ?

